{
    "collab_server" : "",
    "contents" : "library(iNEXT)\n\n.prepareAcaciaData <- function(x) {\n  # combine first 3 columns with presence/absence result\n  out <- cbind(x[,1:3], .pa(x))\n  # only A_mearsii\n  out <- out[out$Host == 'A_mearnsii',]\n  # set the rownames to MP1_F1_Summer, etc...\n  rownames(out) <- do.call(paste, c(out[c(\"Sample\", \"Season\")], sep = \"_\"))\n  # create a new Site column containing just the site extracted from the Sample column\n  out$Site <- unlist(lapply(strsplit(as.character(out$Sample), \"\\\\_\"), \"[[\", 1))\n  # remove Host, Sample & Season columns\n  out <- subset(out, select = -c(Host, Sample, Season))\n  # combine number of rows and sum, per site\n  out <- cbind(SampleUnit = aggregate(. ~ Site, out, length)[,2], aggregate(. ~ Site, out, sum))\n  # set rownames to Site\n  rownames(out) <- out$Site\n  # drop the Site column\n  out <- subset(out, select =-Site)\n  \n  out\n}\n\n\nbw_sample <- .prepareAcaciaData(bw_vs_all)\nbw_sample.iNEXT <- iNEXT(apply(bw_sample, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nbw_sample.ants <- .prepareAcaciaData(bw_vs_all.ants)\nbw_sample.ants.iNEXT <- iNEXT(apply(bw_sample.ants, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nbw_sample.coleoptera <- .prepareAcaciaData(bw_vs_all.coleoptera)\nbw_sample.coleoptera.iNEXT <- iNEXT(apply(bw_sample.coleoptera, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nbw_sample.hemiptera <- .prepareAcaciaData(bw_vs_all.hemiptera)\nbw_sample.hemiptera.iNEXT <- iNEXT(apply(bw_sample.hemiptera, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nprepareAcaciaBySiteHost <- function(x) {\n  # combine first 3 columns with presence/absence result\n  out <- cbind(x[,1:3], .pa(x))\n  \n  out$Host <- as.character(factor(out$Host, levels = c(\"A_mearnsii\", \"A_sieberiana\"), labels = c(\"Am\", \"Vs\")))\n  out$Sample <- unlist(lapply(strsplit(as.character(out$Sample), \"\\\\_\"), \"[[\", 1))\n  # remove Season column\n  out <- subset(out, select = -Season)\n  # combine number of rows and sum, per site\n  out <- cbind(SampleUnit = aggregate(. ~ Sample + Host, out, length)[,3], aggregate(. ~ Sample + Host, out, sum))\n  # set the rownames to MP_As, etc...\n  rownames(out) <- do.call(paste, c(out[c(\"Sample\", \"Host\")], sep = \"_\"))\n  # drop the Site column\n  out <- subset(out, select =-c(Sample, Host))\n  \n  out\n}\n\nprepareAcaciaBySeasonSiteHost <- function(x, season) {\n  out <- x[x$Season == season,]\n  # combine first 3 columns with presence/absence result\n  out <- cbind(out[,1:3], .pa(out))\n  \n  out$Host <- as.character(factor(out$Host, levels = c(\"A_mearnsii\", \"A_sieberiana\"), labels = c(\"Am\", \"Vs\")))\n  out$Sample <- unlist(lapply(strsplit(as.character(out$Sample), \"\\\\_\"), \"[[\", 1))\n  # remove Season column\n  out <- subset(out, select = -Season)\n  # combine number of rows and sum, per site\n  out <- cbind(SampleUnit = aggregate(. ~ Sample + Host, out, length)[,3], aggregate(. ~ Sample + Host, out, sum))\n  # set the rownames to MP_As, etc...\n  rownames(out) <- do.call(paste, c(out[c(\"Sample\", \"Host\")], sep = \"_\"))\n  # drop the Site column\n  out <- subset(out, select =-c(Sample, Host))\n  \n  out\n}\n\nprepareAcaciaByHostRegionHost <- function(x) {\n  # combine first 3 columns with presence/absence result\n  out <- cbind(x[,1:3], .pa(x))\n  \n  out$Host <- as.character(factor(out$Host, levels = c(\"A_mearnsii\", \"A_sieberiana\"), labels = c(\"Am\", \"Vs\")))\n  out$Sample <- as.character(out$Sample)\n  out$Sample[grepl(\"KZN\", out$Sample)] <- \"KZN\"\n  out$Sample[grepl(\"MP\", out$Sample)] <- \"MP\"\n  # remove Season column\n  out <- subset(out, select = -Season)\n  # combine number of rows and sum, per site\n  out <- cbind(SampleUnit = aggregate(. ~ Sample + Host, out, length)[,3], aggregate(. ~ Sample + Host, out, sum))\n  # set the rownames to MP_As, etc...\n  rownames(out) <- do.call(paste, c(out[c(\"Sample\", \"Host\")], sep = \"_\"))\n  # drop the Site column\n  out <- subset(out, select =-c(Sample, Host))\n  \n  out\n}\n\nprepareAcaciaByHost <- function(x) {\n  # combine first 3 columns with presence/absence result\n  out <- cbind(x[,1:3], .pa(x))\n  \n  out$Host <- as.character(factor(out$Host, levels = c(\"A_mearnsii\", \"A_sieberiana\"), labels = c(\"Am\", \"Vs\")))\n  # remove Sample, Season column\n  out <- subset(out, select = -c(Sample, Season))\n  # combine number of rows and sum, per site\n  out <- cbind(SampleUnit = aggregate(. ~ Host, out, length)[,3], aggregate(. ~ Host, out, sum))\n  # set the rownames to MP_As, etc...\n  rownames(out) <- out$Host\n  # drop the Site column\n  out <- subset(out, select =-Host)\n  \n  out\n}\n\nprepareBySeasonHost <- function (x, host, season) {\n  result <- x[x$Host == host & x$Season == season,]\n  # combine first 3 columns with presence/absence result\n  result <- cbind(result[,1:3], .pa(result))\n  \n  # create a new Site column containing just the site extracted from the Sample column\n  result$Site <- unlist(lapply(strsplit(as.character(result$Sample), \"\\\\_\"), \"[[\", 1))\n  # remove Host, Sample and Season columns\n  result <- subset(result, select = -c(Host, Sample, Season))\n  # combine number of rows and sum, per site\n  result <- cbind(SampleUnit = aggregate(. ~ Site, result, length)[,3], aggregate(. ~ Site, result, sum))\n  # set rownames to Site\n  rownames(result) <- result$Site\n  # drop the Site column\n  result <- subset(result, select =-Site)\n  # remove sites with all zeros\n  result <- result[rowSums(result[,2:length(names(result))]) > 0,]\n  \n  result\n}\n\nprepareByRegionSeason <- function (x, region, season) {\n  result <- x[grepl(region, x$Sample) & x$Season == season,]\n  # combine first 3 columns with presence/absence result\n  result <- cbind(result[,1:3], .pa(result))\n  \n  # remove Sample and Season columns\n  result <- subset(result, select = -c(Sample, Season))\n  # combine number of rows and sum, per site\n  result <- cbind(SampleUnit = aggregate(. ~ Host, result, length)[,3], aggregate(. ~ Host, result, sum))\n  # set rownames to Host\n  rownames(result) <- result$Host\n  # drop the Host column\n  result <- subset(result, select =-Host)\n  # remove columns with all zeros\n  result <- result[,colSums(result) > 0]\n  \n  result\n}\n\nprepareBySeasonHostRegion <- function (x, host, season) {\n  result <- x[x$Host == host & x$Season == season,]\n  # combine first 3 columns with presence/absence result\n  result <- cbind(result[,1:3], .pa(result))\n  \n  #create a new Region column containing KZN or MPL\n  result$Region <- substring(gsub(\"MP\", \"MPL\", result$Sample),1,3)\n  # remove Host, Sample and Season columns\n  result <- subset(result, select = -c(Host, Sample, Season))\n  # combine number of rows and sum, per region\n  result <- cbind(SampleUnit = aggregate(. ~ Region, result, length)[,3], aggregate(. ~ Region, result, sum))\n  # set rownames to Region\n  rownames(result) <- result$Region\n  # drop the Region column\n  result <- subset(result, select =-Region)\n  # remove sites with all zeros\n  result <- result[rowSums(result[,2:length(names(result))]) > 0,]\n  \n  result\n}\n\nbw_vs_all.enoughtrees <- bw_vs_all[!grepl(\"KZN3\", bw_vs_all$Sample),]\nbw_vs_all.enoughtrees <- bw_vs_all.enoughtrees[!(\n    grepl(\"MP3\", bw_vs_all$Sample) &&\n    (\n      bw_vs_all$Season == \"Spring\" ||\n      bw_vs_all$Season == \"Winter\" && bw_vs_all$Host == \"V_sieberiana\"\n    )\n  )\n,]\nbw_vs_site_host <- prepareAcaciaBySiteHost(bw_vs_all)\nbw_vs_site_host.enoughtrees.summer <- prepareAcaciaBySeasonSiteHost(bw_vs_all.enoughtrees, \"Summer\")\nbw_vs_site_host.enoughtrees.spring <- prepareAcaciaBySeasonSiteHost(bw_vs_all.enoughtrees, \"Spring\")\nbw_vs_site_host.enoughtrees.winter <- prepareAcaciaBySeasonSiteHost(bw_vs_all.enoughtrees, \"Winter\")\n\nbw_vs_site_host.iNEXT <- iNEXT(apply(bw_vs_site_host, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000)\nbw_vs_site_host.iNEXT.10 <- iNEXT(apply(bw_vs_site_host, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000, endpoint = 10)\nbw_vs_site_host.iNEXT.15 <- iNEXT(apply(bw_vs_site_host, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000, endpoint = 15)\nbw_vs_site_host.iNEXT.20 <- iNEXT(apply(bw_vs_site_host, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000, endpoint = 20)\nbw_vs_site_host.iNEXT.enoughtrees.summer <- iNEXT(apply(bw_vs_site_host.enoughtrees.summer, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000)\nbw_vs_site_host.iNEXT.enoughtrees.summer.7 <- iNEXT(apply(bw_vs_site_host.enoughtrees.summer, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000, endpoint = 7)\nbw_vs_site_host.iNEXT.enoughtrees.spring <- iNEXT(apply(bw_vs_site_host.enoughtrees.spring, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000)\nbw_vs_site_host.iNEXT.enoughtrees.spring.7 <- iNEXT(apply(bw_vs_site_host.enoughtrees.spring, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000, endpoint = 7)\nbw_vs_site_host.iNEXT.enoughtrees.winter <- iNEXT(apply(bw_vs_site_host.enoughtrees.winter, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000)\nbw_vs_site_host.iNEXT.enoughtrees.winter.7 <- iNEXT(apply(bw_vs_site_host.enoughtrees.winter, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\", nboot = 5000, endpoint = 7)\n\nbw_vs_host <- prepareAcaciaByHost(bw_vs_all)\nbw_vs_host.iNEXT <- iNEXT(apply(bw_vs_host, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nbw_vs_region_host <- prepareAcaciaByHostRegionHost(bw_vs_all)\nbw_vs_region_host.iNEXT <- iNEXT(apply(bw_vs_region_host, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\n# MP3, MP4, KZN2, KZN3\nbw_vs_region_host.MP34KZN23 <- bw_vs_all\nbw_vs_region_host.MP34KZN23 <- bw_vs_region_host.MP34KZN23[grepl(\"(MP[34]|KZN[23])\", bw_vs_region_host.MP34KZN23$Sample),]\nbw_vs_region_host.MP34KZN23 <- prepareAcaciaByHostRegionHost(bw_vs_region_host.MP34KZN23)\nbw_vs_region_host.MP34KZN23.iNEXT <- iNEXT(apply(bw_vs_region_host.MP34KZN23, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nbw_vs_region_host.summer <- prepareAcaciaByHostRegionHost(bw_vs_all[bw_vs_all$Season == 'Summer',])\nbw_vs_region_host.summer.iNEXT <- iNEXT(apply(bw_vs_region_host.summer, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\nbw_vs_region_host.winter <- prepareAcaciaByHostRegionHost(bw_vs_all[bw_vs_all$Season == 'Winter',])\nbw_vs_region_host.winter.iNEXT <- iNEXT(apply(bw_vs_region_host.winter, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\nbw_vs_region_host.spring <- prepareAcaciaByHostRegionHost(bw_vs_all[bw_vs_all$Season == 'Spring',])\nbw_vs_region_host.spring.iNEXT <- iNEXT(apply(bw_vs_region_host.spring, 1, as.numeric), q=c(0, 1, 2), datatype=\"incidence\")\n\nhost_season <- list(\n  bw_summer = prepareBySeasonHost(bw_vs_all, 'A_mearnsii', 'Summer'),\n  bw_spring = prepareBySeasonHost(bw_vs_all, 'A_mearnsii', 'Spring'),\n  bw_winter = prepareBySeasonHost(bw_vs_all, 'A_mearnsii', 'Winter'),\n  vs_summer = prepareBySeasonHost(bw_vs_all, 'A_sieberiana', 'Summer'),\n  vs_spring = prepareBySeasonHost(bw_vs_all, 'A_sieberiana', 'Spring'),\n  vs_winter = prepareBySeasonHost(bw_vs_all, 'A_sieberiana', 'Winter')\n)\n\nregion_season <- list(\n  KZN_summer = prepareByRegionSeason(bw_vs_all, 'KZN', 'Summer'),\n  KZN_spring = prepareByRegionSeason(bw_vs_all, 'KZN', 'Spring'),\n  KZN_winter = prepareByRegionSeason(bw_vs_all, 'KZN', 'Winter'),\n  MP_summer = prepareByRegionSeason(bw_vs_all, 'MP', 'Summer'),\n  MP_spring = prepareByRegionSeason(bw_vs_all, 'MP', 'Spring'),\n  MP_winter = prepareByRegionSeason(bw_vs_all, 'MP', 'Winter')\n)\n\nbw_season_region <- list(\n  Summer = prepareBySeasonHostRegion(bw_vs_all, \"A_mearnsii\", \"Summer\"),\n  Spring = prepareBySeasonHostRegion(bw_vs_all, \"A_mearnsii\", \"Spring\"),\n  Winter = prepareBySeasonHostRegion(bw_vs_all, \"A_mearnsii\", \"Winter\")\n)\n\nhost_season_taxa <- list(\n  bw_ants_summer = prepareBySeasonHost(bw_vs_all.ants, 'A_mearnsii', 'Summer'),\n  bw_ants_spring = prepareBySeasonHost(bw_vs_all.ants, 'A_mearnsii', 'Spring'),\n  bw_ants_winter = prepareBySeasonHost(bw_vs_all.ants, 'A_mearnsii', 'Winter'),\n  bw_coleoptera_summer = prepareBySeasonHost(bw_vs_all.coleoptera, 'A_mearnsii', 'Summer'),\n  bw_coleoptera_spring = prepareBySeasonHost(bw_vs_all.coleoptera, 'A_mearnsii', 'Spring'),\n  bw_coleoptera_winter = prepareBySeasonHost(bw_vs_all.coleoptera, 'A_mearnsii', 'Winter'),\n  bw_hemiptera_summer = prepareBySeasonHost(bw_vs_all.hemiptera, 'A_mearnsii', 'Summer'),\n  bw_hemiptera_spring = prepareBySeasonHost(bw_vs_all.hemiptera, 'A_mearnsii', 'Spring'),\n  bw_hemiptera_winter = prepareBySeasonHost(bw_vs_all.hemiptera, 'A_mearnsii', 'Winter'),\n  \n  vs_ants_summer = prepareBySeasonHost(bw_vs_all.ants, 'A_sieberiana', 'Summer'),\n  vs_ants_spring = prepareBySeasonHost(bw_vs_all.ants, 'A_sieberiana', 'Spring'),\n  vs_ants_winter = prepareBySeasonHost(bw_vs_all.ants, 'A_sieberiana', 'Winter'),\n  vs_coleoptera_summer = prepareBySeasonHost(bw_vs_all.coleoptera, 'A_sieberiana', 'Summer'),\n  vs_coleoptera_spring = prepareBySeasonHost(bw_vs_all.coleoptera, 'A_sieberiana', 'Spring'),\n  vs_coleoptera_winter = prepareBySeasonHost(bw_vs_all.coleoptera, 'A_sieberiana', 'Winter'),\n  vs_hemiptera_summer = prepareBySeasonHost(bw_vs_all.hemiptera, 'A_sieberiana', 'Summer'),\n  vs_hemiptera_spring = prepareBySeasonHost(bw_vs_all.hemiptera, 'A_sieberiana', 'Spring'),\n  vs_hemiptera_winter = prepareBySeasonHost(bw_vs_all.hemiptera, 'A_sieberiana', 'Winter')\n)\n\nhost_season_taxa.iNEXT <- list()\nhost_season_taxa.iNEXT$bw_ants_summer = iNEXT(apply(host_season_taxa$bw_ants_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$bw_ants_spring = iNEXT(apply(host_season_taxa$bw_ants_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\n# error\nhost_season_taxa.iNEXT$bw_ants_winter = iNEXT(apply(host_season_taxa$bw_ants_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=50)\nhost_season_taxa.iNEXT$bw_coleoptera_summer = iNEXT(apply(host_season_taxa$bw_coleoptera_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$bw_coleoptera_spring = iNEXT(apply(host_season_taxa$bw_coleoptera_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$bw_coleoptera_winter = iNEXT(apply(host_season_taxa$bw_coleoptera_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$bw_hemiptera_summer = iNEXT(apply(host_season_taxa$bw_hemiptera_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$bw_hemiptera_spring = iNEXT(apply(host_season_taxa$bw_hemiptera_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$bw_hemiptera_winter = iNEXT(apply(host_season_taxa$bw_hemiptera_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_ants_summer = iNEXT(apply(host_season_taxa$vs_ants_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_ants_spring = iNEXT(apply(host_season_taxa$vs_ants_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_ants_winter = iNEXT(apply(host_season_taxa$vs_ants_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_coleoptera_summer = iNEXT(apply(host_season_taxa$vs_coleoptera_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_coleoptera_spring = iNEXT(apply(host_season_taxa$vs_coleoptera_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_coleoptera_winter = iNEXT(apply(host_season_taxa$vs_coleoptera_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_hemiptera_summer = iNEXT(apply(host_season_taxa$vs_hemiptera_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_hemiptera_spring = iNEXT(apply(host_season_taxa$vs_hemiptera_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season_taxa.iNEXT$vs_hemiptera_winter = iNEXT(apply(host_season_taxa$vs_hemiptera_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\n\n\nhost_season.iNEXT <- list()\nhost_season.iNEXT$bw_summer = iNEXT(apply(host_season$bw_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season.iNEXT$bw_spring = iNEXT(apply(host_season$bw_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season.iNEXT$bw_winter = iNEXT(apply(host_season$bw_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season.iNEXT$vs_summer = iNEXT(apply(host_season$vs_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season.iNEXT$vs_spring = iNEXT(apply(host_season$vs_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nhost_season.iNEXT$vs_winter = iNEXT(apply(host_season$vs_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\n\nregion_season.iNEXT <- list()\nregion_season.iNEXT$KZN_summer = iNEXT(apply(region_season$KZN_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nregion_season.iNEXT$KZN_spring = iNEXT(apply(region_season$KZN_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nregion_season.iNEXT$KZN_winter = iNEXT(apply(region_season$KZN_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nregion_season.iNEXT$MP_summer = iNEXT(apply(region_season$MP_summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nregion_season.iNEXT$MP_spring = iNEXT(apply(region_season$MP_spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nregion_season.iNEXT$MP_winter = iNEXT(apply(region_season$MP_winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\n\nbw_season_region.iNEXT = list()\nbw_season_region.iNEXT$Summer = iNEXT(apply(bw_season_region$Summer, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nbw_season_region.iNEXT$Spring = iNEXT(apply(bw_season_region$Spring, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\nbw_season_region.iNEXT$Winter = iNEXT(apply(bw_season_region$Winter, 1, as.numeric), q=0, datatype=\"incidence\", nboot=5000)\n\nlibrary(xlsx)\niNEXTtoExcel <- function(data, file) {\n  write.xlsx(data$DataInfo, file=file, sheetName=\"DataInfo\")\n  write.xlsx(data$BasicIndex, file=file, sheetName=\"BasicIndex\", append=TRUE)\n  sapply(names(data$Accumulation), function(x) {\n    write.xlsx(data$Accumulation[[x]], file=file, sheetName=x, append=TRUE)\n  }) \n}\n#iNEXTtoExcel(bw_vs_site_host.iNEXT.enoughtrees.summer, \"Output/bw_vs_site_host.iNEXT.enoughtrees.summer.xlsx\")\n#iNEXTtoExcel(bw_vs_site_host.iNEXT.enoughtrees.summer.7, \"Output/bw_vs_site_host.iNEXT.enoughtrees.summer.7.xlsx\")\niNEXTtoExcel(bw_vs_site_host.iNEXT.10, \"Output/bw_vs_site_host.iNEXT.10.xlsx\")\niNEXTtoExcel(bw_vs_site_host.iNEXT.enoughtrees.spring.7, \"Output/bw_vs_site_host.iNEXT.enoughtrees.spring.7.xlsx\")\niNEXTtoExcel(bw_vs_site_host.iNEXT.enoughtrees.summer.7, \"Output/bw_vs_site_host.iNEXT.enoughtrees.summer.7.xlsx\")\niNEXTtoExcel(bw_vs_site_host.iNEXT.enoughtrees.winter.7, \"Output/bw_vs_site_host.iNEXT.enoughtrees.winter.7.xlsx\")\n\n\n# Produces: Error in rmultinom(B, n, pi.star) : NA in probability vector\n#bw_vs.bytree <- bw_vs_all\n#rownames(bw_vs.bytree) <- do.call(paste, c(bw_vs.bytree[c(\"Sample\", \"Season\")], sep = \"_\"))\n#bw_vs.bytree <- subset(bw_vs.bytree, select = -c(Host, Sample, Season))\n#bw_vs.bytree <- bw_vs.bytree[rowSums(bw_vs.bytree) != 0, ]\n#bw_vs.bytree.iNEXT <- iNEXT(apply(bw_vs.bytree, 1, function(x) { sort(as.numeric(x[x!=0]), decreasing=T) }), q=c(0, 1, 2), datatype=\"abundance\")\n",
    "created" : 1547923995266.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1095502645",
    "id" : "A601C1A2",
    "lastKnownWriteTime" : 1457034499,
    "last_content_update" : 1457034499,
    "path" : "~/Desktop/Acacia data/Acacia.iNEXT.preparedata.R",
    "project_path" : "Acacia.iNEXT.preparedata.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}