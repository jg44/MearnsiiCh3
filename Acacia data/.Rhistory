.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=TRUE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
system(paste("mkdir '",wd, "/png_version/'", sep=""))
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
pngpath<-paste(wd, "/png_version/", sep="")
x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
system(x) }
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
.devpdf("ss", png=TRUE)
.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=TRUE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
system(paste("mkdir '",wd, "/png_version/'", sep=""))
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
pngpath<-paste(wd, "/png_version/", sep="")
x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
system(x)
dev.print(png, 'filename.png')
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
.devpdf("ss", png=TRUE, overwrite = TRUE)
.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=TRUE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
system(paste("mkdir '",wd, "/png_version/'", sep=""))
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
pngpath<-paste(wd, "/png_version/", sep="")
# x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
# system(x)
dev.print(png, 'ssssss.png')
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
.devpdf("ss", png=TRUE, overwrite = TRUE)
.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=TRUE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
system(paste("mkdir '",wd, "/png_version/'", sep=""))
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
pngpath<-paste(wd, "/png_version/", sep="")
# x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
# system(x)
dev.copy(png, 'ssssss.png')
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
.devpdf("ss", png=TRUE, overwrite = TRUE)
dev.copy(png, 'ssssss.png')
x11(width = 20, height = 7)
ggiNEXT(bw_vs_host.iNEXT3, type=1, facet.var="order") + labs(x="Sampled tree count", y="Morphospecies diversity") + theme_bw(base_size = 24) +
theme(legend.position = "none")
# x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
# system(x)
dev.copy(png, 'ssssss.png')
dev.off()
.devpdf("ss", png=TRUE, overwrite = TRUE)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
x11(width = 20, height = 7)
ggiNEXT(bw_vs_host.iNEXT3, type=1, facet.var="order") + labs(x="Sampled tree count", y="Morphospecies diversity") + theme_bw(base_size = 24) +
theme(legend.position = "none")
# x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
# system(x)
dev.copy(png, 'ssssss.png')
# x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
# system(x)
dev.copy(png, 'ttttt.png')
dev.off()
.devpdf("ss", png=TRUE, overwrite = TRUE)
dev.off()
dev.off()
dev.off()
plot(1,1)
dev.copy(png, "abc.png")
dev.off()
dev.off()
dev.off()
x11(width = 20, height = 7)
ggiNEXT(bw_vs_host.iNEXT3, type=1, facet.var="order") + labs(x="Sampled tree count", y="Morphospecies diversity") + theme_bw(base_size = 24) +
theme(legend.position = "none")
dev.copy(png, "abcd.png");dev.off()
dev.off()
dev.off()
x <- "C:\Program Files\ImageMagick-7.0.8-Q16\magick.exe" convert C:\Users\jrg1035\Downloads\a4.pdf C:\Users\jrg1035\Downloads\RR.png
x <- ""C:\Program Files\ImageMagick-7.0.8-Q16\magick.exe" convert C:\Users\jrg1035\Downloads\a4.pdf C:\Users\jrg1035\Downloads\RR.png"
x <- '"C:\Program Files\ImageMagick-7.0.8-Q16\magick.exe" convert C:\Users\jrg1035\Downloads\a4.pdf C:\Users\jrg1035\Downloads\RR.png'
x <- ' "C:\Program Files\ImageMagick-7.0.8-Q16\magick.exe" convert C:\Users\jrg1035\Downloads\a4.pdf C:\Users\jrg1035\Downloads\RR.png'
x <- ' "C:\Program Files\ImageMagick-7.0.8-Q16\magick.exe" convert C:\Users\jrg1035\Downloads\a4.pdf C:\Users\jrg1035\Downloads\RR.png'
x <- '"C:/Program Files\ImageMagick-7.0.8-Q16\magick.exe" convert C:\Users\jrg1035\Downloads\a4.pdf C:\Users\jrg1035\Downloads\RR.png'
x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RR.png'
require("rstudioapi")
system(x)
wd="./graphs"
file="ssss"
tf <- rstudioapi::getActiveDocumentContext()$path
tf
ff<-paste(wd,"/",file,".pdf",sep="")
ff
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
ff
fn
strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
ff
paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
paste('C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
system(x)
x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
system(x)
file="kill"
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
system(x)
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
system(x)
getwd()
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', file, ".png" )
x
ff
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', ff, ".png" )
system(x)
ff
# system(paste("mkdir '",wd, "/png_version/'", sep=""))
gsub("\", "/", ff)
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', ff, ".png" )
x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
getwd()
.devpdf("ss", png=TRUE, overwrite = TRUE)
plot(1,1)
dev.copy(png, "abcd.png");dev.off()
gsub("\", "/", ff)
gsub("\", "/", ff)
gsub('//', '/', ff)
gsub("/", "\\", ff)
gsub("/", "\\\", ff)
gsub("/", "\\\\", ff)
# system(paste("mkdir '",wd, "/png_version/'", sep=""))
ff <- gsub("/", "\\\\", ff)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', ff, ".png" )
x
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', ff, ".png" )
#x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', fng)
#x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
fng <- gsub(".pdf", ".png", ff)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert "', ff, '" "', fng)
#x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', ff, '" -resize 25% "', fng)
#x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 488 "', ff, '" -resize 25% "', fng)
#x <- '"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert C:/Users/jrg1035/Downloads/a4.pdf C:/Users/jrg1035/Downloads/RRt.png'
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 566 "', ff, '" -resize 12.5% "', fng)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 566 "', ff, '" -resize 12.5% "', fng)
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -resize '4000' -density 288 "', ff, '" -resize 25% "', fng)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -resize '4000' -density 288 "', ff, '" -resize 25% "', fng)
system(x)
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -resize 4000 -density 288 "', ff, '" -resize 25% "', fng)
system(x)
.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=TRUE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
# system(paste("mkdir '",wd, "/png_version/'", sep=""))
ff <- gsub("/", "\\\\", ff)
fng <- gsub(".pdf", ".png", ff)
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', ff, '" -resize 25% "', fng)
system(x)
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
plot(1,1)
x11()
plot(1,1)
.devpdf("ss", png=TRUE, overwrite = TRUE)
.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=FALSE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
# system(paste("mkdir '",wd, "/png_version/'", sep=""))
ff <- gsub("/", "\\\\", ff)
fng <- gsub(".pdf", ".png", ff)
fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
#pngpath<-paste(wd, "/png_version/", sep="")
#x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', ff, '" -resize 25% "', fng)
system(x)
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
.devpdf("ss", png=TRUE, overwrite = TRUE)
dev.copy(png, "abcd.png");dev.off()
.devpdf("ss", png=TRUE, overwrite = TRUE)
x11()
plot(1,1)
.devpdf("ss", png=TRUE, overwrite = TRUE)
.bu("/Users/jrg1035/Dropbox/R/myfunctions/functionlist.r")
ff
.pdf2png <- function(pdffile){
pdffile <- gsub("/", "\\\\", ff)
pngfile <- gsub(".pdf", ".png", ff)
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
system(x)
}
.devpdf <- function(file, wd="./graphs", open=TRUE, overwrite=FALSE, png=FALSE, tf=NULL, meta=FALSE){
require("rstudioapi")
tf <- rstudioapi::getActiveDocumentContext()$path
if (is.null(wd)) wd=getwd()
if ((meta) && (is.null(tf))) tf<-.getfile()
ff<-paste(wd,"/",file,".pdf",sep="")
ff<-gsub('//', '/', ff)  ## interior spaces
ff<-gsub('.pdf.pdf', '.pdf', ff)
if ((overwrite) || (!(file.exists(ff)))) dev.copy2pdf(file=ff) else
if (overwrite) { print("File already exists.  Opening existing file.")
ff<-paste(wd,"/",file,format(Sys.time(), "%Y%m%dhr%H"),".pdf",sep="_")
dev.copy2pdf(file=ff)}
if (open) browseURL(ff)
if (png) {
.pdf2png(ff)
# system(paste("mkdir '",wd, "/png_version/'", sep=""))
# ff <- gsub("/", "\\\\", ff)
# fng <- gsub(".pdf", ".png", ff)
# fn<-strsplit(ff, "/")[[1]][length(strsplit(ff, "/")[[1]])]
# #pngpath<-paste(wd, "/png_version/", sep="")
# #x<-paste("sips -s format png '", ff, "' --out '", pngpath, substring(fn, 1, nchar(fn)-4), ".png'", sep="")
# x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', ff, '" -resize 25% "', fng)
# system(x)
}
if ((meta) && (tf!="n")) {
sink(paste0(ff, ".metadata.txt"))
cat("Script file:  ")
cat(paste0("\nMade by: ", tf))
cat("\n")
cat("Approximate line: ", readline("Approx. line? "))
cat("\nNotes: ", readline("Notes? "))
cat("\nFigure #: ", readline("Figure #: "))
cat("\nTimestamp: ", date())
.sinkall()
}
print(ff)
}
list.files("./graphs/")
list.files("./Output//")
.pdf2png("./graphs/BW_VS Rarefaction By Host_all four.pdf")
.pdf2png
.pdf2png <- function(pdffile){
pdffile <- gsub("/", "\\\\", pdfffile)
pngfile <- gsub(".pdf", ".png", ff)
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
system(x)
}
.pdf2png("./graphs/BW_VS Rarefaction By Host_all four.pdf")
.pdf2png <- function(pdffile){
pdffile <- gsub("/", "\\\\", pdffile)
pngfile <- gsub(".pdf", ".png", ff)
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
system(x)
}
.pdf2png("./graphs/BW_VS Rarefaction By Host_all four.pdf")
x
.pdf2png <- function(pdffile){
pdffile <- gsub("/", "\\\\", pdffile)
pngfile <- gsub(".pdf", ".png", ff)
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
system(x)
print(x)
}
.pdf2png <- function(pdffile){
pdffile <- gsub("/", "\\\\", pdffile)
pngfile <- gsub(".pdf", ".png", pdffile)
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
system(x)
print(x)
}
.pdf2png("./graphs/BW_VS Rarefaction By Host_all four.pdf")
pngfile
.pdf2png <- function(pdffile){
pdffile <- gsub("/", "\\\\", pdffile)
pngfile <- gsub(".pdf", ".png", pdffile)
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
system(x)
print(pngfile)
}
.pdf2png("./graphs/BW_VS Rarefaction By Host_all four.pdf")
.pdf2png("BW_VS_Adj Morphospecies by family host.pdf")
.pdf2png("./graphs/BW_VS_Adj Morphospecies by family host.pdf")
.auths
.auths
getwd()
.pdf2png("./graphs/BW_VS_Adj Morphospecies by family host.pdf")
.pdf2png
pdffile<- "./graphs/BW_VS_Adj Morphospecies by family host.pdf"
pdffile <- gsub("/", "\\\\", pdffile)
pdffile
pngfile <- gsub(".pdf", ".png", pdffile)
pngfile
x <- paste0('"C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe" convert -density 288 "', pdffile, '" -resize 25% "', pngfile)
x
system(x)
system(x)
x
.pdf2png("./graphs/BW_VS_Adj Morphospecies by family host.pdf")
